{"ast":null,"code":"var _jsxFileName = \"/Users/dixit/Desktop/Projects/management system/Frontend/src/Components/Adminmain.jsx\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { Navbar } from 'react-bootstrap';\nimport { Route, Router, Routes } from 'react-router-dom';\nimport Sidebar from '../Sidebar/sidebar';\nimport Admin from '../Admin';\nimport View from '../View';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst Adminmain = () => {\n  _s();\n  const [showSidebar, setShowSidebar] = useState(false);\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n  const [image, setimage] = useState(null);\n  const handle = name => {\n    setimage(name);\n    console.log(name);\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Router, {\n      children: [/*#__PURE__*/_jsxDEV(Navbar, {\n        toggleSidebar: toggleSidebar\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 21,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Sidebar, {\n        role: \"admin\",\n        showSidebar: showSidebar,\n        toggleSidebar: () => setShowSidebar(!showSidebar)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 4\n      }, this), /*#__PURE__*/_jsxDEV(Routes, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          path: \"/admin\",\n          element: /*#__PURE__*/_jsxDEV(Admin, {\n            handle_view: handle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 4\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          path: \"/image\",\n          element: /*#__PURE__*/_jsxDEV(View, {\n            image: image\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 34\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 4\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 4\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 4\n    }, this)\n  }, void 0, false);\n};\n_s(Adminmain, \"/vtSXQIfTVsyoW+mOY3kInq9lAI=\");\n_c = Adminmain;\nexport default Adminmain;\nvar _c;\n$RefreshReg$(_c, \"Adminmain\");","map":{"version":3,"names":["React","useState","Navbar","Route","Router","Routes","Sidebar","Admin","View","jsxDEV","_jsxDEV","Fragment","_Fragment","Adminmain","_s","showSidebar","setShowSidebar","toggleSidebar","image","setimage","handle","name","console","log","children","fileName","_jsxFileName","lineNumber","columnNumber","role","path","element","handle_view","_c","$RefreshReg$"],"sources":["/Users/dixit/Desktop/Projects/management system/Frontend/src/Components/Adminmain.jsx"],"sourcesContent":["import React, { useState } from 'react'\nimport { Navbar } from 'react-bootstrap';\nimport { Route, Router, Routes } from 'react-router-dom';\nimport Sidebar from '../Sidebar/sidebar';\nimport Admin from '../Admin';\nimport View from '../View';\n\nconst Adminmain = () => {\n  const [showSidebar, setShowSidebar] = useState(false);\n  const toggleSidebar = () => {\n    setShowSidebar(!showSidebar);\n  };\n  const[image,setimage]=useState(null);\n  const handle=(name)=>{\n    setimage(name);\n    console.log(name);\n  }\n  return (\n   <>\n   <Router>\n   <Navbar toggleSidebar={toggleSidebar}/>\n   <Sidebar role=\"admin\" showSidebar={showSidebar} toggleSidebar={() => setShowSidebar(!showSidebar)} />\n   <Routes>\n   <Route path='/admin' element={<Admin handle_view={handle}/>}/>\n   <Route path=\"/image\" element={<View image={image}/>} />\n   </Routes>\n   </Router>\n    </>\n  )\n}\n\nexport default Adminmain\n\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,SAASC,MAAM,QAAQ,iBAAiB;AACxC,SAASC,KAAK,EAAEC,MAAM,EAAEC,MAAM,QAAQ,kBAAkB;AACxD,OAAOC,OAAO,MAAM,oBAAoB;AACxC,OAAOC,KAAK,MAAM,UAAU;AAC5B,OAAOC,IAAI,MAAM,SAAS;AAAC,SAAAC,MAAA,IAAAC,OAAA,EAAAC,QAAA,IAAAC,SAAA;AAE3B,MAAMC,SAAS,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACtB,MAAM,CAACC,WAAW,EAAEC,cAAc,CAAC,GAAGf,QAAQ,CAAC,KAAK,CAAC;EACrD,MAAMgB,aAAa,GAAGA,CAAA,KAAM;IAC1BD,cAAc,CAAC,CAACD,WAAW,CAAC;EAC9B,CAAC;EACD,MAAK,CAACG,KAAK,EAACC,QAAQ,CAAC,GAAClB,QAAQ,CAAC,IAAI,CAAC;EACpC,MAAMmB,MAAM,GAAEC,IAAI,IAAG;IACnBF,QAAQ,CAACE,IAAI,CAAC;IACdC,OAAO,CAACC,GAAG,CAACF,IAAI,CAAC;EACnB,CAAC;EACD,oBACCX,OAAA,CAAAE,SAAA;IAAAY,QAAA,eACAd,OAAA,CAACN,MAAM;MAAAoB,QAAA,gBACPd,OAAA,CAACR,MAAM;QAACe,aAAa,EAAEA;MAAc;QAAAQ,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAC,CAAC,eACvClB,OAAA,CAACJ,OAAO;QAACuB,IAAI,EAAC,OAAO;QAACd,WAAW,EAAEA,WAAY;QAACE,aAAa,EAAEA,CAAA,KAAMD,cAAc,CAAC,CAACD,WAAW;MAAE;QAAAU,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAAE,CAAC,eACrGlB,OAAA,CAACL,MAAM;QAAAmB,QAAA,gBACPd,OAAA,CAACP,KAAK;UAAC2B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAErB,OAAA,CAACH,KAAK;YAACyB,WAAW,EAAEZ;UAAO;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAC,CAAC,eAC9DlB,OAAA,CAACP,KAAK;UAAC2B,IAAI,EAAC,QAAQ;UAACC,OAAO,eAAErB,OAAA,CAACF,IAAI;YAACU,KAAK,EAAEA;UAAM;YAAAO,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAAC;QAAE;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAC/C,CAAC;IAAA;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD;EAAC,gBACN,CAAC;AAEP,CAAC;AAAAd,EAAA,CAtBKD,SAAS;AAAAoB,EAAA,GAATpB,SAAS;AAwBf,eAAeA,SAAS;AAAA,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}